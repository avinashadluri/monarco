{"version":3,"sources":["Table.js","App.js","reportWebVitals.js","index.js"],"names":["TableData","data","Table","Header","Row","HeaderCell","Body","map","row","i","Cell","Name","Contact","BusinessName","TypeOfService","LastUsed","CummulativeCount","AddedBy","App","useState","setName","setContact","setBusinessName","setTypeOfService","setLastUsed","setCummulativeCount","setAddedBy","setData","loading","setLoading","isDisabled","API","useEffect","a","axios","get","then","response","fetchData","Container","fluid","className","as","Form","Field","placeholder","onChange","e","target","value","Button","color","type","onClick","preventDefault","body","post","disabled","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.9d0e50c7.chunk.js","sourcesContent":["import { Table } from \"semantic-ui-react\";\n\nconst TableData = ({ data }) => {\n  return (\n    <Table>\n      <Table.Header>\n        <Table.Row>\n          <Table.HeaderCell>Name</Table.HeaderCell>\n          <Table.HeaderCell>Contact</Table.HeaderCell>\n          <Table.HeaderCell>BusinessName</Table.HeaderCell>\n          <Table.HeaderCell>TypeOfService</Table.HeaderCell>\n          <Table.HeaderCell>LastUsed</Table.HeaderCell>\n          <Table.HeaderCell>CummulativeCount</Table.HeaderCell>\n          <Table.HeaderCell>AddedBy</Table.HeaderCell>\n        </Table.Row>\n      </Table.Header>\n\n      <Table.Body>\n        {data?.map((row, i) => (\n          <Table.Row key={i}>\n            <Table.Cell>{row.Name}</Table.Cell>\n            <Table.Cell>{row.Contact}</Table.Cell>\n            <Table.Cell>{row.BusinessName}</Table.Cell>\n            <Table.Cell>{row.TypeOfService}</Table.Cell>\n            <Table.Cell>{row.LastUsed}</Table.Cell>\n            <Table.Cell>{row.CummulativeCount}</Table.Cell>\n            <Table.Cell>{row.AddedBy}</Table.Cell>\n          </Table.Row>\n        ))}\n      </Table.Body>\n    </Table>\n  );\n};\n\nexport default TableData;\n","import { useState, useEffect } from \"react\";\nimport { Button, Form, Container, Header } from \"semantic-ui-react\";\nimport axios from \"axios\";\nimport TableData from \"./Table\";\nimport \"./App.css\";\n\nfunction App() {\n  const [Name, setName] = useState(\"\");\n  const [Contact, setContact] = useState(\"\");\n  const [BusinessName, setBusinessName] = useState(\"\");\n  const [TypeOfService, setTypeOfService] = useState(\"\");\n  const [LastUsed, setLastUsed] = useState(\"\");\n  const [CummulativeCount, setCummulativeCount] = useState(\"\");\n  const [AddedBy, setAddedBy] = useState(\"\");\n  const [data, setData] = useState([]);\n  const [loading, setLoading] = useState(true);\n  let isDisabled =\n    !Name &&\n    !Contact &&\n    !BusinessName &&\n    !TypeOfService &&\n    !LastUsed &&\n    !CummulativeCount &&\n    !AddedBy;\n\n  const API =\n    \"https://sheet.best/api/sheets/11a66d7e-2aee-4fd7-be05-98973acbfd1e\";\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n\n    const body = {\n      Name,\n      Contact,\n      BusinessName,\n      TypeOfService,\n      LastUsed,\n      CummulativeCount,\n      AddedBy,\n    };\n\n    axios.post(API, body).then((response) => {\n      setData([...data, response.data[0]]);\n    });\n  };\n\n  useEffect(() => {\n    const fetchData = async () => {\n      await axios.get(API).then((response) => {\n        setData(response.data);\n      });\n      setLoading(false);\n    };\n    fetchData();\n  }, []);\n\n  if (loading) return <h2>Loading....</h2>;\n\n  return (\n    <Container fluid className=\"container\">\n      <Header as=\"h2\">Monarco vendor data</Header>\n      <Form className=\"form\">\n        <Form.Field>\n          <label>Name</label>\n          <input\n            placeholder=\"Enter your Name\"\n            onChange={(e) => setName(e.target.value)}\n          />\n        </Form.Field>\n        <Form.Field>\n          <label>Contact</label>\n          <input\n            placeholder=\"Enter Contact\"\n            onChange={(e) => setContact(e.target.value)}\n          />\n        </Form.Field>\n        <Form.Field>\n          <label>Business Name</label>\n          <input\n            placeholder=\"Enter Business Name\"\n            onChange={(e) => setBusinessName(e.target.value)}\n          />\n        </Form.Field>\n        <Form.Field>\n          <label>Type Of Service</label>\n          <input\n            placeholder=\"Enter Type Of Service\"\n            onChange={(e) => setTypeOfService(e.target.value)}\n          />\n        </Form.Field>\n        <Form.Field>\n          <label>Last Used</label>\n          <input\n            placeholder=\"Enter Last Used\"\n            onChange={(e) => setLastUsed(e.target.value)}\n          />\n        </Form.Field>\n        <Form.Field>\n          <label>Cummulative Count</label>\n          <input\n            placeholder=\"Enter Cummulative Count\"\n            onChange={(e) => setCummulativeCount(e.target.value)}\n          />\n        </Form.Field>\n        <Form.Field>\n          <label>Added By</label>\n          <input\n            placeholder=\"Enter Added By (Avinash, 510, D ...)\"\n            onChange={(e) => setAddedBy(e.target.value)}\n          />\n        </Form.Field>\n        <div className=\"navigation\">\n          <Button\n            color=\"blue\"\n            type=\"submit\"\n            onClick={handleSubmit}\n            disabled={isDisabled}\n          >\n            Submit\n          </Button>\n        </div>\n      </Form>\n      <hr />\n      <TableData data={data} />\n    </Container>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport \"semantic-ui-css/semantic.min.css\";\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}